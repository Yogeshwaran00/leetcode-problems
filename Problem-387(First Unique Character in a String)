Problem-387(First Unique Character in a String)

Description:
Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

Example 1:
Input: s = "leetcode"
Output: 0

Example 2:
Input: s = "loveleetcode"
Output: 2

Example 3:
Input: s = "aabb"
Output: -1

Constraints:
1 <= s.length <= 105
s consists of only lowercase English letters.

Solution:
int firstUniqChar(char* s) {
    int count=0;
    for(int i=0;i<strlen(s);i++){
        int j;
        for(j=0;j<strlen(s);j++){
        if(i!=j && s[i]==s[j])
        break;
        }
        if (j==strlen(s)){
            return i;
        }
    }
    return -1;
}
 
