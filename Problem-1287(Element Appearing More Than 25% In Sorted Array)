Problem-1287(Element Appearing More Than 25% In Sorted Array)

Description:
Given an integer array sorted in non-decreasing order, there is exactly one integer in the array that occurs more than 25% of the time, return that integer.

Example 1:
Input: arr = [1,2,2,6,6,6,6,7,10]
Output: 6

Example 2:
Input: arr = [1,1]
Output: 1

Constraints:
1 <= arr.length <= 104
0 <= arr[i] <= 105

Solution:
class Solution {
public:
    int findSpecialInteger(vector<int>& arr) {
        int size=arr.size();
        int a=size/4;
        int count=1;
        for(int i=0;i<size-1;i++){
            if(arr[i]==arr[i+1])count++;
            else count=1;
            if(count>a)return arr[i];
        }
        if(size==1)return arr[0];
        return 1;
    }
};
