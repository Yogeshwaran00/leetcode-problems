Problem-1399(Count Largest Group)

Description:
We need to group the numbers from 1 to n according to the sum of its digits. For example, the numbers 14 and 5 belong to the same group, whereas 13 and 3 belong to different groups.
Return the number of groups that have the largest size, i.e. the maximum number of elements.

Example 1:
Input: n = 13
Output: 4
Explanation: There are 9 groups in total, they are grouped according sum of its digits of numbers from 1 to 13:
[1,10], [2,11], [3,12], [4,13], [5], [6], [7], [8], [9].
There are 4 groups with largest size.

Example 2:
Input: n = 2
Output: 2
Explanation: There are 2 groups [1], [2] of size 1.
 
Constraints:
1 <= n <= 104

Solution:
public class Solution {
    public int CountLargestGroup(int n) {
        Dictionary<int,int>hold=new Dictionary<int,int>();
        int count=0;
        int maxGroupSize = 0;;
        for(int i=1;i<=n;i++){
            int temp=i;
            int sum=0;
            while(temp!=0){
                sum+=temp%10;
                temp/=10;
            }
            if(!hold.ContainsKey(sum))hold[sum]=1;
            else {
                hold[sum]++;
                // count++;
            }
            if (hold[sum] > maxGroupSize) {
                maxGroupSize = hold[sum];
                count = 1;
            } else if (hold[sum] == maxGroupSize) {
                count++;
            }
        }
        return count;
    }
}
