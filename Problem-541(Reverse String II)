Problem-541(Reverse String II)

Description:
Given a string s and an integer k, reverse the first k characters for every 2k characters counting from the start of the string.
If there are fewer than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and leave the other as original.

Example 1:
Input: s = "abcdefg", k = 2
Output: "bacdfeg"

Example 2:
Input: s = "abcd", k = 2
Output: "bacd"
 
Constraints:
1 <= s.length <= 104
s consists of only lowercase English letters.
1 <= k <= 104

Solution:
class Solution {
public:
    string doreverse(string s,int start,int end){
        while(start<end){
            swap(s[start],s[end]);
            start++;
            end--;
        }
        return s;
    }
    string reverseStr(string s, int k) {
        if(s.size()<k){
            s=doreverse(s,0,s.size()-1);return s;
        }
        for(int i=0;i<s.size();i+=k*2){
            if(i+k<=s.size()){
                cout<<i<<" "<<i+k<<endl;
                s=doreverse(s,i,i+k-1);
            }
            else s=doreverse(s,i,s.size()-1);
        }
        return s;
    }
};
