Problem-557(Reverse Words in a String III)

Description:
Given a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.

Example 1:
Input: s = "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"

Example 2:
Input: s = "Mr Ding"
Output: "rM gniD"
 
Constraints:
1 <= s.length <= 5 * 104
s contains printable ASCII characters.
s does not contain any leading or trailing spaces.
There is at least one word in s.
All the words in s are separated by a single space.

Solution:
char* reverseWords(char* s) {
    int len=strlen(s);
    char* b = (char*)malloc((len + 1) * sizeof(char)); 
    int count1=0;
    int start=0;
    for(int i=0;i<=len;i++){
        if(s[i]==' ' || s[i]=='\0')
        {
            for(int j=i-1;j>=start;j--){
                b[count1]=s[j];
                count1++;
            }
            if(s[i]==' '){
                b[count1]=' ';
                count1++;
                start=i+1;
            }
        }
    }
     b[count1] = '\0';
    return b;
    
}
